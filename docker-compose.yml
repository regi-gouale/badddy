services:
  backend:
    container_name: backend
    build:
      context: .
      target: runner
    command:
      - pnpm
      - --filter
      - backend
      - start:prod
    environment:
      NODE_ENV: production
      PORT: "3001"
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    ports:
      - "3001:3000"

  web:
    container_name: web
    build:
      context: .
      target: runner
    command:
      - pnpm
      - --filter
      - web
      - exec
      - next
      - start
      - -H
      - 0.0.0.0
      - -p
      - "8081"
    environment:
      NODE_ENV: production
      PORT: "8081"
      BACKEND_URL: http://backend:3001
    env_file:
      - .env
    depends_on:
      - backend
    ports:
      - "8081:8081"

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  redis-data:
